{"ast":null,"code":"var _jsxFileName = \"/Users/oscaroceguerabibriesca/Documents/Repos/examples/crwn-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\nconst initialState = {\n  displayName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const signUpStart = this.props.signUpStart;\n      const _this$state = this.state,\n            displayName = _this$state.displayName,\n            email = _this$state.email,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword;\n\n      if (password !== confirmPassword) {\n        alert('password dont match');\n        return;\n      }\n\n      signUpStart({\n        displayName,\n        email,\n        password\n      });\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          displayName = _this$state2.displayName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword;\n    return React.createElement(\"div\", {\n      className: \"sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"I do not have a account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Sign up with ypur email and password\"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"confirmPassword\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"SIGN UP\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/oscaroceguerabibriesca/Documents/Repos/examples/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","connect","FormInput","CustomButton","signUpStart","initialState","displayName","email","password","confirmPassword","SignUp","Component","constructor","handleSubmit","event","preventDefault","props","state","alert","handleChange","target","name","value","setState","render","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\n\nimport FormInput from '../form-input/form-input.component'\nimport CustomButton from '../custom-button/custom-button.component'\n\nimport { signUpStart } from '../../redux/user/user.actions'\n\nimport './sign-up.styles.scss'\n\nconst initialState = {\n  displayName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n}\n\nclass SignUp extends React.Component {\n  constructor() {\n    super()\n\n    this.state = initialState\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault()\n    const { signUpStart } = this.props\n    const { displayName, email, password, confirmPassword } = this.state\n\n    if (password !== confirmPassword) {\n      alert('password dont match')\n      return\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    })\n  }\n\n  handleChange = event => {\n    const {name, value} = event.target\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  render () {\n    const { displayName, email, password, confirmPassword } = this.state\n    return (\n      <div className='sign-up'>\n        <h1 className='title'>I do not have a account</h1>\n        <span>Sign up with ypur email and password</span>\n        <form className='sign-up-form' onSubmit={this.handleSubmit}>\n          <FormInput\n            type='text'\n            name='displayName'\n            value={displayName}\n            onChange={this.handleChange}\n            label='Display Name'\n            required\n          />\n          <FormInput\n            type='email'\n            name='email'\n            value={email}\n            onChange={this.handleChange}\n            label='Email'\n            required\n          />\n          <FormInput\n            type='password'\n            name='password'\n            value={password}\n            onChange={this.handleChange}\n            label='Password'\n            required\n          />\n          <FormInput\n            type='password'\n            name='confirmPassword'\n            value={confirmPassword}\n            onChange={this.handleChange}\n            label='confirmPassword'\n            required\n          />\n          <CustomButton type='submit'>SIGN UP</CustomButton>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n})\n\nexport default connect(null, mapDispatchToProps)(SignUp)"]},"metadata":{},"sourceType":"module"}