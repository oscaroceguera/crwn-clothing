{"ast":null,"code":"import { takeEvery, call } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionsTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n  } catch (error) {} // collectionRef.get().then(snapshot => {\n  //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //   dispatch(fetchCollectionsSuccess(collectionsMap));\n  // })\n  //   .catch(error => dispatch(fetchCollectionsFailure(error)));\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionsTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/oscaroceguerabibriesca/Documents/Repos/examples/crwn-clothing/src/redux/shop/shop.saga.js"],"names":["takeEvery","call","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionsTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,IAAnB,QAA8B,oBAA9B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AACA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAOC,gBAAP,MAA6B,cAA7B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AAEvC,MAAI;AACF,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMX,IAAI,CAACE,+BAAD,EAAkCO,QAAlC,CAAjC;AACD,GAJD,CAIE,OAAOG,KAAP,EAAc,CAEf,CARsC,CAWvC;AACA;AACA;AACA;AACA;;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMd,SAAS,CAACM,gBAAgB,CAACS,uBAAlB,EAA2CR,qBAA3C,CAAf;AACD","sourcesContent":["import {takeEvery, call} from 'redux-saga/effects'\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure\n} from './shop.actions'\n\nimport ShopActionsTypes from './shop.types'\n\nexport function* fetchCollectionsAsync() {\n  \n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get()\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\n  } catch (error) {\n\n  }\n\n\n  // collectionRef.get().then(snapshot => {\n  //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //   dispatch(fetchCollectionsSuccess(collectionsMap));\n  // })\n  //   .catch(error => dispatch(fetchCollectionsFailure(error)));\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionsTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync)\n}"]},"metadata":{},"sourceType":"module"}