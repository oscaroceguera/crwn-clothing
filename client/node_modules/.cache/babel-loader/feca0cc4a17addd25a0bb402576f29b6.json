{"ast":null,"code":"import _defineProperty from \"/Users/oscaroceguerabibriesca/Documents/Repos/examples/crwn-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInFailure, emailSignInSuccess } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(googleSignInSuccess(_objectSpread({\n      id: userSnapShot.id\n    }, userSnapShot.data())));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(emailSignInSuccess(_objectSpread({\n      id: userSnapShot.id\n    }, userSnapShot.data())));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSingInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSingInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/oscaroceguerabibriesca/Documents/Repos/examples/crwn-clothing/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","UserActionTypes","googleSignInSuccess","googleSignInFailure","emailSignInFailure","emailSignInSuccess","auth","googleProvider","createUserProfileDocument","signInWithGoogle","signInWithPopup","user","userRef","userSnapShot","get","id","data","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSingInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":";;;;;;AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,mBAAR,EAA6BC,mBAA7B,EAAkDC,kBAAlD,EAAsEC,kBAAtE,QAA+F,gBAA/F;AAEA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,yBAA9B,QAA8D,+BAA9D;AAEA,OAAO,UAAUC,gBAAV,GAA8B;AACnC,MAAI;AAAA,iBACa,MAAMH,IAAI,CAACI,eAAL,CAAqBH,cAArB,CADnB;AAAA,UACKI,IADL,QACKA,IADL;;AAEF,UAAMC,OAAO,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACI,mBAAmB;AAAGa,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EAApB,CAAT;AACD,GALD,CAKE,OAAMC,KAAN,EAAa;AACb,UAAMnB,GAAG,CAACK,mBAAmB,CAACc,KAAD,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA2D;AAChE,MAAI;AAAA,kBACe,MAAMf,IAAI,CAACgB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADrB;AAAA,UACMV,IADN,SACMA,IADN;;AAEF,UAAMC,OAAO,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACO,kBAAkB;AAAGU,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EAAnB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMnB,GAAG,CAACM,kBAAkB,CAACa,KAAD,CAAnB,CAAT;AACD;AACF;AAED,OAAO,UAAUM,mBAAV,GAAgC;AACrC,QAAM1B,UAAU,CACdI,eAAe,CAACuB,oBADF,EAEdf,gBAFc,CAAhB;AAID;AAED,OAAO,UAAUgB,kBAAV,GAA+B;AACpC,QAAM5B,UAAU,CACdI,eAAe,CAACyB,mBADF,EAEdR,eAFc,CAAhB;AAID;AAGD,OAAO,UAAUS,SAAV,GAAsB;AAC3B,QAAM5B,GAAG,CAAC,CACRC,IAAI,CAACuB,mBAAD,CADI,EAERvB,IAAI,CAACyB,kBAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects'\nimport UserActionTypes from './user.types'\nimport {googleSignInSuccess, googleSignInFailure, emailSignInFailure, emailSignInSuccess} from './user.actions'\n\nimport {auth, googleProvider, createUserProfileDocument} from '../../firebase/firebase.utils'\n\nexport function* signInWithGoogle () {\n  try {\n    const {user} = yield auth.signInWithPopup(googleProvider)\n    const userRef = yield call(createUserProfileDocument, user)\n    const userSnapShot = yield userRef.get()\n    yield put(googleSignInSuccess({ id: userSnapShot.id, ...userSnapShot.data()}))\n  } catch(error) {\n    yield put(googleSignInFailure(error))\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password }}) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password)\n    const userRef = yield call(createUserProfileDocument, user)\n    const userSnapShot = yield userRef.get()\n    yield put(emailSignInSuccess({ id: userSnapShot.id, ...userSnapShot.data() }))\n  } catch (error) {\n    yield put(emailSignInFailure(error))\n  }\n}\n\nexport function* onGoogleSingInStart() {\n  yield takeLatest(\n    UserActionTypes.GOOGLE_SIGN_IN_START,\n    signInWithGoogle\n  )\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(\n    UserActionTypes.EMAIL_SIGN_IN_START,\n    signInWithEmail\n  )\n}\n\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSingInStart),\n    call(onEmailSignInStart)\n  ])\n}"]},"metadata":{},"sourceType":"module"}