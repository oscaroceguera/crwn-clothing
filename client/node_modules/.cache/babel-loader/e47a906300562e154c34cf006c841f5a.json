{"ast":null,"code":"var _jsxFileName = \"/Users/oscaroceguerabibriesca/Documents/Repos/examples/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionFetchinng } from '../../redux/shop/shop.selector';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverviewContainer from \"../../components/collection-overview/collection-overview.container\";\nimport CollectionPage from \"../collection/collection.component\";\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionFEtching = _this$props.isCollectionFEtching;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isCollectionFEtching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFEtching: selectIsCollectionFetchinng\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/oscaroceguerabibriesca/Documents/Repos/examples/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","fetchCollectionsStartAsync","selectIsCollectionFetchinng","WithSpinner","CollectionsOverviewContainer","CollectionPage","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFEtching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,2BAAT,QAA4C,gCAA5C;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,4BAAP,MAAyC,oEAAzC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,MAAMC,yBAAyB,GAAGH,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAME,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAI;AAAA,UACXR,0BADW,GACqB,KAAKS,KAD1B,CACXT,0BADW;AAEnBA,IAAAA,0BAA0B;AAC3B;;AAEDU,EAAAA,MAAM,GAAI;AAAA,wBACgC,KAAKD,KADrC;AAAA,UACAE,KADA,eACAA,KADA;AAAA,UACOC,oBADP,eACOA,oBADP;AAER,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,YAAKD,KAAK,CAACE,IAAX,CAFN;AAGE,MAAA,SAAS,EAAEV,4BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,KAAD;AACE,MAAA,IAAI,YAAKQ,KAAK,CAACE,IAAX,mBADN;AAEE,MAAA,SAAS,EAAEJ,KAAK,IACd,oBAAC,yBAAD;AACE,QAAA,SAAS,EAAEG;AADb,SAEMH,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAkBD;;AA1BoC;;AA6BvC,MAAMK,eAAe,GAAGhB,wBAAwB,CAAC;AAC/Cc,EAAAA,oBAAoB,EAAEX;AADyB,CAAD,CAAhD;;AAIA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACtChB,EAAAA,0BAA0B,EAAE,MAAMgB,QAAQ,CAAChB,0BAA0B,EAA3B;AADJ,CAAL,CAAnC;;AAKA,eAAeD,OAAO,CAACe,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { createStructuredSelector } from 'reselect'\nimport { connect } from 'react-redux'\n\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionFetchinng } from '../../redux/shop/shop.selector'\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\n\nimport CollectionsOverviewContainer from \"../../components/collection-overview/collection-overview.container\";\nimport CollectionPage from \"../collection/collection.component\";\n\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount () {\n    const { fetchCollectionsStartAsync  } = this.props;\n    fetchCollectionsStartAsync()\n  }\n\n  render () {\n    const { match, isCollectionFEtching } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          component={CollectionsOverviewContainer}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={props => (\n            <CollectionPageWithSpinner\n              isLoading={isCollectionFEtching}\n              {...props}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFEtching: selectIsCollectionFetchinng\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}